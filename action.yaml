name: "Record build and test results action"
author: "launchableinc"
description: "Launchable action for recording build and test results"
branding:
  icon: 'circle'
  color: 'gray-dark'
inputs:
  build_name:
    required: false
    description: "The build name. Default GitHub SHA."
    default: $GITHUB_SHA
  max_days:
    required: false
    description: "The maximum number of days to collect commits retroactively. Default 30."
    default: "30"
  no_submodules:
    required: false
    description: "Stop collecting build information from Git Submodules. Default False."
    default: "false"
  no_build:
    required: false
    description: "Send test session without recording build. Default False."
    default: "false"
  python_version:
    required: false
    description: "Python version >= 3.5 <=3.10. Default 3.10"
    default: "3.10"
  report_path:
    required: true
    description: "The test report file path. Default ..."
    default: "."
  source_path:
    required: false
    description: "Path to a local Git repository/workspace. Default current directory."
    default: "."
  test_runner:
    required: true
    description: "test runner name"
  test_session_name:
    required: false
    description: "The test session name for `--session-name` option of record session command. test-session name value This value needs to be globally unique"
    default: ""
  flavors:
    required: false
    description: "The flavors for `--flavor` option of record session command"
    default: ""
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
      with:
        python-version: ${{ inputs.python_version }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.2.2
      with:
        distribution: 'adopt'
        java-version: 8
    - id: install
      shell: bash
      run: pip install "launchable>=1.59.0"
    - id: verify
      shell: bash
      run: |
        launchable verify
    - id: record_build
      shell: bash
      if: inputs.no_build != 'true'
      run: |
        options=(
          "--name" "${{ inputs.build_name }}"
          "--max-days" "${{ inputs.max_days }}"
          "--source" "src=${{ inputs.source_path }}"
        )

        if [ "${{ inputs.no_submodules }}" == "true" ]; then
          options+=("--no-submodules")
        fi

        launchable record build "${options[@]}"
    - id: record_session
      if: inputs.no_build != 'true'
      shell: bash
      run: |
        options=(
          "--build" "${{ inputs.build_name }}"
        )

        # Set up flavors options
        if [ -n "${{ inputs.flavors }}" ]; then
          IFS=', ' read -r -a flavors <<< "${{ inputs.flavors }}"
          for flavor in "${flavors[@]}"; do
            options+=("--flavor" "$flavor")
          done
        fi

        # Set up test session name option
        if [ "${{ inputs.test_session_name }}" ]; then
          options+=("--session-name" "${{ inputs.test_session_name }}")
        fi

        # In some case (e.g. parallel execution), wants to use the same ses sion name.
        # So, allow the case that the session name is already used.
        set +e
        output=$(launchable record session "${options[@]}" 2>&1)
        exit_code=$?

        if [[ $output == *"is already used"* ]]; then
          echo "INFO: test_session_name: '${{ inputs.test_session_name }}' is already registered. New test session wasn't created."
          exit_code=0
        else
          echo $output
        fi

        exit $exit_code
    - id: record_test
      shell: bash
      run: |
        options=(
          "--allow-test-before-build"
        )

        if [ "${{ inputs.no_build }}" == "true" ]; then
          # If this action is called multiple times in a workflow, there is a possibility that .launchable file is already created.
          # So, try to remove it to avoid the conflict, just in case.
          rm -f .launchable

          options+=("--no-build")

          # Set up flavors options
          if [ -n "${{ inputs.flavors }}" ]; then
            IFS=', ' read -r -a flavors <<< "${{ inputs.flavors }}"
            for flavor in "${flavors[@]}"; do
              options+=("--flavor" "$flavor")
            done
          fi
        fi

        if [ "${{ inputs.test_session_name }}" ]; then
          options+=(
            "--build" "${{ inputs.build_name }}"
            "--session-name" "${{ inputs.test_session_name }}"
          )
        fi

        options+=(
            "${{ inputs.test_runner }}"
            "${{ inputs.report_path }}"
        )

        launchable record tests "${options[@]}"
